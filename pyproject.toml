[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "graphmix"
version = "0.0.2"
requires-python = ">=3.10"
dependencies = [
    "matplotlib~=3.9.0",
    "pydantic~=2.7.1",
    "sqlmodel~=0.0.18",
    "networkx~=3.3",
    "requests~=2.32.2",
    "Pint~=0.23",
    "requests-ratelimiter~=0.6.0",
    "scipy~=1.13.1",
]
authors = [
    { name = "Jonathan Taylor", email = "jonrtaylor12@gmail.com" }
]

maintainers = [
    { name = "Jonathan Taylor", email = "jonrtaylor12@gmail.com" }
]

readme = "README.rst"

license = { file = "LICENSE" }
description = "Intelligent experiment planning and optimization powered by graph algorithms."
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
]

[project.urls]
Documentation = "https://python-graphmix.readthedocs.io/"
Changelog = "https://python-graphmix.readthedocs.io/en/latest/changelog.html"
Issues = "https://github.com/jt05610/python-graphmix/issues"
Repository = "https://github.com/jt05610/python-graphmix.git"
Homepage = "https://github.com/jt05610/python-graphmix"

[tool.ruff]
extend-exclude = ["static", "ci/templates"]
line-length = 79
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.lint.per-file-ignores]
"ci/*" = ["S"]

[tool.ruff.lint]
ignore = [
    "RUF001", # ruff-specific rules ambiguous-unicode-character-string
    "S101", # flake8-bandit assert
    "S308", # flake8-bandit suspicious-mark-safe-usage
    "S603", # flake8-bandit subprocess-without-shell-equals-true
    "S607", # flake8-bandit start-process-with-partial-path
    "E501", # pycodestyle line-too-long
]
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "EXE", # flake8-executable
    "F", # pyflakes
    "I", # isort
    "INT", # flake8-gettext
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S", # flake8-bandit
    "UP", # pyupgrade
    "W", # pycodestyle warnings
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
forced-separate = ["conftest"]
force-single-line = true

[tool.black]
line-length = 79
target-version = ["py312"]

[tool.hatch.version]
